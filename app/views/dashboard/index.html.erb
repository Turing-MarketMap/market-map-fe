<h1>Market Map</h1>

<div class="filters">
  <%= form_with url: '/listings', method: :post, local: true do |f| %>
    <%= f.label :make %>
    <%= f.select(:make, ["a","b"]) %>
    <%= f.label :model %>
    <%= f.select(:model, ["a","b"]) %>
  <% end %>

</div>

<div class="js_chart">
  <canvas id="myChart" width="600" height="150"></canvas>
  <script type="text/javascript">
    const ctx = document.getElementById('myChart').getContext('2d');
    const mixedChart = new Chart(ctx, {
      type: 'scatter',
      data: {
          datasets: [{
              type: 'line',
              showLine: false,
              label: 'Listings',
              data: [{selling_price: 1, odometer: 1, make: "test"},{selling_price: 1, odometer: 2, make: "test"},{selling_price: 0, odometer: 1, make: "test"},{selling_price: 3, odometer: 3, make: "test"},{selling_price: 2.6, odometer: 2, make: "test"},{selling_price: 1.8, odometer: 1.4, make: "test"}],
              pointBackgroundColor: 'rgba(0,0,200,1)',
              pointBorderColor: 'rgba(0,0,0,.1)',
              pointRadius: 2,
              pointHoverRadius: 20
          }, {
              type: 'line',
              label: 'Regression',
              //data: [{selling_price: 1, odometer: 1, make: "test"},{selling_price: 1, odometer: 2, make: "test"},{selling_price: 0, odometer: 1, make: "test"},{selling_price: 3, odometer: 3, make: "test"},{selling_price: 2.6, odometer: 2, make: "test"},{selling_price: 1.8, odometer: 1.4, make: "test"}],
              data: [[0,1.1],[1,1.6], [2,1.6],[2.5,1.9],[3,2.6]],
              borderColor: 'rgba(255,150,150,1)',
              borderJoinStyle: 'bevel',
              borderWidth: 4,
              pointBackgroundColor: 'rgba(200,0,0,1)',
              pointBorderColor: 'rgba(0,0,0,.1)',
          }]
      },

      options: {
        parsing: {
          xAxisKey: 'selling_price',
          yAxisKey: 'odometer'
        },
        scales: {
          y: { title: { color: 'grey', display: true, text: 'Price' } },
          x: { title: { color: 'grey', display: true, text: 'Mileage' } }
        },
        onClick: function clickHandler(evt) {
          const points = mixedChart.getElementsAtEventForMode(evt, 'nearest', { intersect: true }, true);

          if (points.length) {
            // Gather data from point that is clicked
            const firstPoint = points[0];
            const label = mixedChart.data.labels[firstPoint.index];
            const value = mixedChart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];
            // redirect to show page with data added to query string
            //location.href = '/listings/0?x={value[0]}&y={value[1]}';
          }
        }
      }
    });
  </script>
</div>
